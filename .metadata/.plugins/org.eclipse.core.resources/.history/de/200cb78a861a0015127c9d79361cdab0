package View;

import javax.swing.*;

import Controller.CalendarioICS;
import Controller.Xml;
import Model.*;
import net.fortuna.ical4j.data.ParserException;
import net.fortuna.ical4j.model.ValidationException;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Files;

public class VistaExportarImportar extends JFrame {

	private Model model;
	private JComboBox<Proyecto> proyectosCB;
	private JButton exportar;
	private JButton importar;
	//private JButton importar2;
	//private JButton exportar2;
	private JPanel content;

	VistaExportarImportar(Model model) {
		this.model = model;
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setVisible(true);
		setSize(new Dimension(250,200));

		/** content */
		content = new JPanel();
		content.setLayout(new GridBagLayout());
		content.setBackground(new Color(20, 35, 20, 230));

		/** inicializar proyectosCB */
		proyectosCB = new JComboBox<>();
		for (Proyecto p : model.getProyectos()) {
			proyectosCB.addItem(p);
		}

		/** botones */
		exportar = new JButton("Exportar Proyecto");
		exportar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				Xml xml = new Xml();
				xml.exportarProyecto((Proyecto) proyectosCB.getSelectedItem(), ((Proyecto) proyectosCB.getSelectedItem()).getNombre() + ".xml");
			}
		});
		importar = new JButton("Importar Proyecto");
		importar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String ruta = openFileDialog();
				String extension = "";

				int i = ruta.lastIndexOf('.');
				if (i >= 0) {
				    extension = ruta.substring(i+1);
				}
				if(extension=="ics")
				{
					CalendarioICS cal = new CalendarioICS();
					try {
						cal.importarCalendario(model, ruta);
					} catch (IOException | ParserException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				}
				else if(extension=="xml")
				{
					Xml xml = new Xml();
					xml.importarProyecto(ruta, model);
				}
				
			}
		});

		/** botones */
		/*
		exportar2 = new JButton("Exportar Agenda");
		exportar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				CalendarioICS ICS = new CalendarioICS();
				String ruta = "";
				try {
					ICS.exportarAgenda(model,ruta);
				} catch (IOException e1) {
					e1.printStackTrace();
				} catch (ValidationException e1) {
					e1.printStackTrace();
				} catch (URISyntaxException e1) {
					e1.printStackTrace();
				}
			}
		});
		importar2 = new JButton("Importar Agenda");
		importar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				String ruta = openFileDialog();
				CalendarioICS ICS = new CalendarioICS();
				try {
					ICS.exportarAgenda(model, ruta);
				} catch (IOException e1) {
					e1.printStackTrace();
				} catch (ValidationException e1) {
					e1.printStackTrace();
				} catch (URISyntaxException e1) {
					e1.printStackTrace();
				}
			}
		});
		*/

		/** agregar elementos al frame */
		GridBagConstraints gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 0;
		content.add(proyectosCB, gbc);
		gbc.gridx = 0;
		gbc.gridy = 0;
		content.add(exportar,gbc);
		gbc.gridx = 0;
		gbc.gridy = 1;
		content.add(importar,gbc);
		/*
		gbc.gridx = 0;
		gbc.gridy = 2;
		content.add(exportar2,gbc);
		gbc.gridx = 0;
		gbc.gridy = 3;
		content.add(importar2,gbc);
		*/
		add(content);
	}

	private String openFileDialog() {
		FileDialog fd = new FileDialog(this,"Elije el archivo a importar",FileDialog.LOAD);
		fd.setDirectory("C:\\");
		//fd.setFile("*.xml");
		fd.setVisible(true);
		String ruta = fd.getFile();
		if (ruta == null) {
			VentanaError VE = new VentanaError("Error");

		}
		return ruta;
	}

	public void actualizarProyectos() {
		proyectosCB.removeAllItems();
		for (Proyecto p : model.getProyectos()) {
			proyectosCB.addItem(p);
		}
	}
}
